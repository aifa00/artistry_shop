<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Artistry</title>
    <link rel="icon" href="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS9J-3gn4CIzFKJR-aqlIq5qco2b9kpS6r4XOS23dnLwALSh_bR1MpNfLkRKKSrQezK-AU&usqp=CAU">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>

<style>

.btn-color{
  background-color:rgb(210, 21, 21);
  color: #fff;
  
}

.card{
    margin-top: 120px;
}

.profile-image-pic{
  height: 200px;
  width: 200px;
  object-fit: cover;
}

#logo{
  color: rgb(0, 0, 0);
  font-size: 25px;
  font-weight: 800;
  letter-spacing: 1px;
}

.cardbody-color{
  background-color: #eeeeee;
}

a{
  text-decoration: none;
}
/* Hide the number input stepper */
input[type="number"]::-webkit-inner-spin-button,
    input[type="number"]::-webkit-outer-spin-button {
      -webkit-appearance: none;
      appearance: none;
      margin: 0;
}

#notification{
    font-size: 13px;
}


</style>

</head>
<body>
    

    <div class="container">


      <!-- alert messsage -->
      <% if (message) { %>
        <div class="alert alert-dismissible fade show" id="alertMsg" role="alert" style="background-color: rgb(171, 235, 183);">
            <p class="text-dark"><%= message %></p>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
        </div>
      <% } %>
        
        <nav class=" container navbar" >
            <div class="container-fluid">
              <span class="navbar-brand" id="logo" >ARTISTRY</span>
            </div>
        </nav>

        <div class="row "  >
          <div class="col-md-6 offset-md-3">
            <div class="card">
    
              <form class="card-body cardbody-color p-lg-5" id="otp-Form" action="/verification" method="post" >
    
                <div class="text-center">
                  <p>please verify to continue</p>
                </div>
    
                <div class="pt-3">
                  <p>Your OTP expires in 5 minutes</p>
                  <input type="hidden" value="<%= userId %>" id="userId" name="userId" >
                  <!-- <input type="hidden" value="" id="email" name="email"> -->
                  <input type="number" class="form-control py-3" id="otp" placeholder="OTP" name="otp" >

                  <p class="text-danger" id="otpError"></p>
                </div>
        
                <div>
                    <button class="btn btn-color w-100" id="verify-btn" >Verify</button>
        
                    <p id="otp-timer" style="display: none;">Time remaining: <span id="countdown"></span></p>
                </div>

              </form>


              <form class="card-body cardbody-color text-center " id="resend-otp-form" action="/resend-otp" method="post">
                
                <input type="hidden" value="<%= userId %>" name="id">
                <input type="hidden" value="<%= email %>" name="email">
                <input type="hidden" value="<%= isForgotPassword %>" id="isForgotPassword" name="isForgotPassword">
                <!-- <p class="text-danger" id="server-error"> error </p> -->

                <a href="#" id="resendLink" style="display: none; font-size: 18px;" >Resend OTP</a>

                <p id="notification">We have sent an OTP to your mail. Please check your inbox.</p>

              </form>

              
            </div>
    
          </div>
        </div>
      </div>

      

<script>
    

    //set otp expiration time
    const ExpirationTime = Date.now() + 30000;

    const countdown = document.getElementById('countdown');
    
    function updateCountdown() {

      const currentTime = Date.now();
      const timeRemaining = ExpirationTime - currentTime;

      //timeRemaining converted to seconds
      //remainnig seconds withins the current minute is found
      const seconds = Math.floor((timeRemaining / 1000) % 60);

      const formattedTime = `00:${String(seconds).padStart(2, '0')}`;
      countdown.textContent = formattedTime;
      document.getElementById("otp-timer").style.display = "inline";

      if (timeRemaining <= 0) {
        clearInterval(intervalId);
        countdown.style.display = "none";
        document.getElementById("otp-timer").style.display = "none";
        document.getElementById("resendLink").style.display = "inline";
        document.getElementById("notification").style.display = "none";
      }
      
    }
    updateCountdown();
    const intervalId = setInterval(updateCountdown, 1000);



    //prvent default behaviour of resendLink
    document.getElementById("resendLink").addEventListener("click", function(event) {
      event.preventDefault();
      document.getElementById("resend-otp-form").submit();

      document.getElementById("resendLink").style.display = "none";
      document.getElementById("notification").style.display = "inline";
      updateCountdown();
      const intervalId = setInterval(updateCountdown, 1000);
    });




    // Create a FormData object to send the form data
    const userId = document.getElementById("userId").value;
    // const email = document.getElementById("email").value;
    const otp = document.getElementById("otp");
    const isForgotPassword = document.getElementById("isForgotPassword").value;
    const formData = {
      userId,
    //   email,
     isForgotPassword,
    };



    // Send the form data using AJAX
    const otpError = document.getElementById('otpError');

    $('#verify-btn').on('click', function(event) {
      event.preventDefault();
      formData.otp = otp.value;

      $.ajax({
        url: '/verification',
        type: 'POST',
        data: formData,
        success: function(response) {
          if (response.success === false) {
            otpError.textContent = response.message;
          } else {
            window.location.href = response.redirectTo;
          }
        },
        error: function(xhr, status, error) {
          try {
            const response = JSON.parse(xhr.responseText);
            if (response.success === false) {
              otpError.textContent = response.message;
            }
          } catch (e) {
            // Handle JSON parsing error, if any
            console.error('Error parsing JSON response:', e);
          }
        }
      });
    });

</script>

</body>
</html>